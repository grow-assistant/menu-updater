2025-03-05 14:18:53,301 - swoop_ai - INFO - Logging initialized at level INFO
2025-03-05 14:18:53,304 - swoop_ai - INFO - Log file: logs\session_20250305_141853\app_main.log
2025-03-05 14:18:53,304 - services.utils.prompt_loader - INFO - PromptLoader initialized with template directory: resources/prompts/templates
2025-03-05 14:18:53,304 - swoop_ai - INFO - QueryClassifierInterface initialized
2025-03-05 14:18:53,323 - services.utils.prompt_loader - INFO - PromptLoader initialized with template directory: resources/prompts/templates
2025-03-05 14:18:53,323 - swoop_ai.services.sql_generator.prompt_builder - ERROR - Error loading SQL patterns: [WinError 3] The system cannot find the path specified: 'C:\\Python\\ai-menu-updater-refactored\\tests\\integration\\services/sql_generator/sql_files'
2025-03-05 14:18:53,329 - swoop_ai.services.sql_generator.prompt_builder - ERROR - Error loading SQL examples: [WinError 3] The system cannot find the path specified: 'C:\\Python\\ai-menu-updater-refactored\\tests\\integration\\services/sql_generator/sql_files'
2025-03-05 14:18:53,329 - swoop_ai.services.sql_generator.prompt_builder - INFO - SQLPromptBuilder initialized
2025-03-05 14:18:53,329 - swoop_ai.services.sql_generator.sql_generator - INFO - SQLGenerator initialized with max_tokens=2000, temperature=0.2
2025-03-05 14:18:53,329 - swoop_ai - INFO - SQLExampleLoader initialized with examples directory: ./services/sql_generator/sql_files
2025-03-05 14:18:54,107 - numexpr.utils - INFO - NumExpr defaulting to 14 threads.
2025-03-05 14:18:54,428 - swoop_ai - INFO - SQLExecutionLayer initialized with max_rows=1000, timeout=10
2025-03-05 14:18:54,438 - __main__ - INFO - Starting real production flow test
2025-03-05 14:18:54,439 - __main__ - INFO - Creating ClassificationService instance
2025-03-05 14:18:54,439 - __main__ - INFO - ClassificationService has classify method: True
2025-03-05 14:18:54,439 - __main__ - INFO - Testing individual services:
2025-03-05 14:18:54,439 - __main__ - INFO - 1. Testing ClassificationService...
2025-03-05 14:18:54,439 - __main__ - INFO - [PASS] ClassificationService has the classify method
2025-03-05 14:18:54,439 - services.utils.prompt_loader - WARNING - Template file not found: resources\prompts\templates\classification_system_prompt.txt
2025-03-05 14:18:55,410 - services.classification.classifier - WARNING - Invalid category returned: the query "how many orders were completed on 2/21/2025?" is asking for a specific count of completed orders on a particular date. this is a data retrieval query that typically requires access to a database or dataset containing order information.. Defaulting to 'general_question'.
2025-03-05 14:18:55,410 - __main__ - INFO - Classification result: {'category': 'general_question', 'confidence': 0.5, 'skip_database': False}
2025-03-05 14:18:55,410 - __main__ - INFO - 2. Testing RulesService...
2025-03-05 14:18:55,410 - services.rules.rules_service - INFO - Loading rules from storage
2025-03-05 14:18:55,411 - services.rules.rules_service - WARNING - System rules file not found
2025-03-05 14:18:55,411 - services.rules.rules_service - WARNING - Business rules file not found
2025-03-05 14:18:55,411 - services.rules.rules_service - INFO - Assigned implementations to query_rules proxy functions
2025-03-05 14:18:55,412 - services.rules.rules_service - INFO - Loaded query rules module: menu_inquiry_rules
2025-03-05 14:18:55,413 - services.rules.rules_service - INFO - Loaded query rules module: order_history_rules
2025-03-05 14:18:55,413 - services.rules.rules_service - INFO - Loaded query rules module: order_ratings_rules
2025-03-05 14:18:55,413 - services.rules.rules_service - INFO - Loaded query rules module: popular_items_rules
2025-03-05 14:18:55,414 - services.rules.rules_service - INFO - Loaded query rules module: trend_analysis_rules
2025-03-05 14:18:55,414 - services.utils.service_registry - INFO - Registered service: rules
2025-03-05 14:18:55,414 - __main__ - INFO - Loading rules...
2025-03-05 14:18:55,414 - services.rules.rules_service - INFO - Processing rules for category: general_question
2025-03-05 14:18:55,414 - __main__ - INFO - Rules loaded: 0 examples found
2025-03-05 14:18:55,414 - __main__ - INFO - 3. Testing GeminiSQLGenerator...
2025-03-05 14:18:55,414 - services.sql_generator.gemini_sql_generator - WARNING - Failed to load validation prompt: [Errno 2] No such file or directory: 'services/sql_generator/templates/sql_validator.txt'
2025-03-05 14:18:55,414 - services.sql_generator.gemini_sql_generator - WARNING - Failed to load optimization prompt: [Errno 2] No such file or directory: 'services/sql_generator/templates/sql_optimizer.txt'
2025-03-05 14:18:55,414 - services.sql_generator.gemini_sql_generator - INFO - SQLGenerator initialized with max_tokens=1024, temperature=0.2
2025-03-05 14:18:55,414 - services.utils.service_registry - INFO - Registered service: sql_generator
2025-03-05 14:18:55,414 - __main__ - INFO - Generating SQL...
2025-03-05 14:18:55,414 - services.sql_generator.gemini_sql_generator - INFO - Built SQL generation prompt with 0 examples and context for general_question
2025-03-05 14:18:55,414 - services.sql_generator.gemini_sql_generator - INFO - Generating SQL with model: gemini-1.5-Flash, attempt: 1/3
2025-03-05 14:18:56,406 - services.sql_generator.gemini_sql_generator - INFO - Extracted SQL (length: 199): SELECT
    count(*)  -- Count the number of orders
FROM
    orders
WHERE
    order_date = '2025-02-2...
2025-03-05 14:18:56,406 - __main__ - INFO - SQL generated: SELECT
    count(*)  -- Count the number of orders
FROM
    orders
WHERE
    order_date = '2025-02-21'  -- Filter by the specific date
    AND status = 7;  -- Filter for completed orders (status = 7)
2025-03-05 14:18:56,406 - __main__ - INFO - 4. Testing SQLExecutor...
2025-03-05 14:18:56,446 - services.execution.sql_executor - INFO - SQLExecutor initialized with pool_size=2, max_overflow=3
2025-03-05 14:18:56,446 - __main__ - INFO - Executing SQL...
2025-03-05 14:18:59,325 - services.execution.sql_executor - WARNING - Error executing SQL (attempt 1/2): (psycopg2.errors.UndefinedColumn) column "order_date" does not exist
LINE 6:     order_date = '2025-02-21'  -- Filter by the specific dat...
            ^

[SQL: SELECT
    count(*)  -- Count the number of orders
FROM
    orders
WHERE
    order_date = '2025-02-21'  -- Filter by the specific date
    AND status = 7;  -- Filter for completed orders (status = 7)]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 14:19:00,027 - services.execution.sql_executor - WARNING - Error executing SQL (attempt 2/2): (psycopg2.errors.UndefinedColumn) column "order_date" does not exist
LINE 6:     order_date = '2025-02-21'  -- Filter by the specific dat...
            ^

[SQL: SELECT
    count(*)  -- Count the number of orders
FROM
    orders
WHERE
    order_date = '2025-02-21'  -- Filter by the specific date
    AND status = 7;  -- Filter for completed orders (status = 7)]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 14:19:00,027 - services.execution.sql_executor - ERROR - SQL execution failed after 2 attempts: (psycopg2.errors.UndefinedColumn) column "order_date" does not exist
LINE 6:     order_date = '2025-02-21'  -- Filter by the specific dat...
            ^

[SQL: SELECT
    count(*)  -- Count the number of orders
FROM
    orders
WHERE
    order_date = '2025-02-21'  -- Filter by the specific date
    AND status = 7;  -- Filter for completed orders (status = 7)]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 14:19:00,027 - services.execution.sql_executor - WARNING - Slow query detected (3.58s): SELECT
    count(*)  -- Count the number of orders
FROM
    orders
WHERE
    order_date = '2025-02-21'  -- Filter by the specific date
    AND status = 7;  -- Filter for completed orders (status = 7)...
2025-03-05 14:19:00,027 - __main__ - WARNING - SQL execution failed: (psycopg2.errors.UndefinedColumn) column "order_date" does not exist
LINE 6:     order_date = '2025-02-21'  -- Filter by the specific dat...
            ^

[SQL: SELECT
    count(*)  -- Count the number of orders
FROM
    orders
WHERE
    order_date = '2025-02-21'  -- Filter by the specific date
    AND status = 7;  -- Filter for completed orders (status = 7)]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-03-05 14:19:00,027 - __main__ - INFO - 5. Testing ResponseGenerator...
2025-03-05 14:19:00,036 - __main__ - ERROR - Individual service test failed: module 'elevenlabs' has no attribute 'Client'
2025-03-05 14:19:00,036 - __main__ - ERROR - Traceback (most recent call last):
  File "C:\Python\ai-menu-updater-refactored\tests\integration\standalone_test.py", line 195, in run_real_test
    response_generator = ResponseGenerator(config)
  File "C:\Python\ai-menu-updater-refactored\services\response\response_generator.py", line 45, in __init__
    self.elevenlabs_client = elevenlabs.Client(api_key=elevenlabs_api_key)
AttributeError: module 'elevenlabs' has no attribute 'Client'

2025-03-05 14:19:00,036 - __main__ - INFO - 

Running complete orchestrator test:
2025-03-05 14:19:00,036 - __main__ - INFO - Initializing OrchestratorService
2025-03-05 14:19:00,036 - services.utils.service_registry - INFO - Registered service: classification
2025-03-05 14:19:00,036 - services.utils.service_registry - INFO - Registered service: rules
2025-03-05 14:19:00,036 - services.utils.service_registry - INFO - Registered service: sql_generator
2025-03-05 14:19:00,036 - services.utils.service_registry - INFO - Registered service: execution
2025-03-05 14:19:00,036 - services.utils.service_registry - INFO - Registered service: response
2025-03-05 14:19:00,036 - services.rules.rules_service - INFO - Loading rules from storage
2025-03-05 14:19:00,036 - services.rules.rules_service - WARNING - System rules file not found
2025-03-05 14:19:00,036 - services.rules.rules_service - WARNING - Business rules file not found
2025-03-05 14:19:00,036 - services.rules.rules_service - INFO - Assigned implementations to query_rules proxy functions
2025-03-05 14:19:00,036 - services.rules.rules_service - INFO - Loaded query rules module: menu_inquiry_rules
2025-03-05 14:19:00,036 - services.rules.rules_service - INFO - Loaded query rules module: order_history_rules
2025-03-05 14:19:00,039 - services.rules.rules_service - INFO - Loaded query rules module: order_ratings_rules
2025-03-05 14:19:00,039 - services.rules.rules_service - INFO - Loaded query rules module: popular_items_rules
2025-03-05 14:19:00,039 - services.rules.rules_service - INFO - Loaded query rules module: trend_analysis_rules
2025-03-05 14:19:00,039 - services.sql_generator.gemini_sql_generator - WARNING - Failed to load validation prompt: [Errno 2] No such file or directory: 'services/sql_generator/templates/sql_validator.txt'
2025-03-05 14:19:00,039 - services.sql_generator.gemini_sql_generator - WARNING - Failed to load optimization prompt: [Errno 2] No such file or directory: 'services/sql_generator/templates/sql_optimizer.txt'
2025-03-05 14:19:00,039 - services.sql_generator.gemini_sql_generator - INFO - SQLGenerator initialized with max_tokens=1024, temperature=0.2
2025-03-05 14:19:00,040 - services.execution.sql_executor - INFO - SQLExecutor initialized with pool_size=2, max_overflow=3
2025-03-05 14:19:00,050 - services.utils.service_registry - ERROR - Failed to initialize service response: module 'elevenlabs' has no attribute 'Client'
2025-03-05 14:19:00,050 - __main__ - ERROR - Orchestrator test FAILED: module 'elevenlabs' has no attribute 'Client'
2025-03-05 14:19:00,052 - __main__ - ERROR - Traceback (most recent call last):
  File "C:\Python\ai-menu-updater-refactored\tests\integration\standalone_test.py", line 215, in run_real_test
    orchestrator = OrchestratorService(config)
  File "C:\Python\ai-menu-updater-refactored\services\orchestrator\orchestrator.py", line 47, in __init__
    self.response_generator = ServiceRegistry.get_service("response")
  File "C:\Python\ai-menu-updater-refactored\services\utils\service_registry.py", line 38, in get_service
    service_info["instance"] = service_info["factory"](cls._config)
  File "C:\Python\ai-menu-updater-refactored\services\orchestrator\orchestrator.py", line 40, in <lambda>
    ServiceRegistry.register("response", lambda cfg: ResponseGenerator(cfg))
  File "C:\Python\ai-menu-updater-refactored\services\response\response_generator.py", line 45, in __init__
    self.elevenlabs_client = elevenlabs.Client(api_key=elevenlabs_api_key)
AttributeError: module 'elevenlabs' has no attribute 'Client'

2025-03-05 14:19:00,052 - __main__ - INFO - Cleaning up resources...
2025-03-05 14:19:00,119 - __main__ - INFO - Cleanup completed
